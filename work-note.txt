13/09

$ git config --global --get user.name [to see current user name]
$ git config --global --get user.email [to see current user email]
$ git config --global core.editor "code --wait" [to wait the terminal untill the vs code close]
git config --global -e [open a file in a default editor to edit all global settings of git] [untill close the file the terminal will wait]

how git should handle end of lines-
            on windows end of lines are marked with two special characters
            1.carriers retiurn and 2. line feed [in mac and linax only line feed]

            core.autocrlf 
             $git config --global core.autocrlf true[true->input for mac][to config to different pc mac and windows end of lines]
getting help
$git config --help
(ls -a [don't clear about the topic][Akhi@Jannat MINGW64 /d/XAAMP/htdocs/awc/study (master)
$ ls
New/  git/  work-note.txt

MINGW64 /d/XAAMP/htdocs/awc/study (master)
$ ls -a
./  ../  .git/  New/  git/  work-note.txt
])

WORKFLOW
 git add *.txt [add only text files where extention is .txt]

eacha commit have: id, message, Date/time,Author, Complete Snapshot.
 $echo hello> file1.txt [to create file]

$echo world>> file1.txt [to modify file, (problem)]
###for marge:-
git checkout -b main [if created git checkout main]
git add [what we can add]

next git checkout -b feature [if created git checkout feature]

git add 
git commit -m ".."
git push --set-upstream origin feature


12/09/
Microservice
1.git 16H 
    - git add, commit, cherry-pick, merge, rebase 
service layer 
repository layer 
2.OOP 
3.SOLID 

4.RESTful API 
Design Pattern: Singletone, Factory, Adapter
Environment Profiling 
Agile Methodology 

Authentication/Authorization with JWT 
User Management
Menu Management 
Permission Management 


Git Study. verson controll 
git add .
git commit -m'njkkj'
git push

micro service 
laraver service layer
repository layer
Restfull API
OOP
SOLID
Scrum
Laravel env for production vs development
.... 
UI
 


https://lucid.app/lucidchart/a988d8cd-5812-4107-9345-79fd442f6426/edit?beaconFlowId=EED842B67126A6AC&invitationId=inv_a2ec0b26-e1b9-40f7-80d3-8907757a1f3f&page=0_0#


Task:
Find Business Requirment.
1.Learn Entty Relationship Diagram
2.Attributes
3.Primary Key
4.Foreign Key
After that create a skimma according to the Business Requirment.

To Work with API and json thats why we can get data from anywhere.
Main Focus on the Patient. When they Register any of our services after that his data we can get everywhere.

Find Out From ERP
    Home Page - Total Purchase,     Total   Sales, Total Purchase Due,  Total  Invoice Due

    Single Curve Of Expense (Day,7 Day,1 Month, 1 Year).
    Sales Payment Due, Purchase Payment Due,Product Stock Alert, Stock Expire Alert(A), Loss Sale Products

    Roll: Multiple- User,Manager,Admin,Super Admin.

    Contacts: Suppliers, Customers

    products :
    Products List,Price History (Price will change according to the current Us Doller Rate),
    Add New Product, Print Labels,

    Purchases:Purchase Order, List Purchases, Add Purchase(can add tax and it can be change from settings, price change according to current us doller rate), List Purchase Return, 

    Sell: All Sell(If any Change there will be a mark like red color),
    Add Sell(customer add from database if not then add as a new customer. According to search the product will show the product name, price and brand), Payment Methode,
    [N.B. Doctor Prescriptions Interfase connect with api. Using name or mobile no. seller see all medicine history provided by doctor. ]
    [we can add medicine dose per day like 
    (1 + 1 + 1)3,
    for 3 days 9, for 7 days 21, for 1 month 90 with the changing of day totyal number of medicine and price will change 
    (1 + 0 + 1)2,
    (1 + 0 + 0)1,
    ]
    Shipment(Courirrer ),Pos Interfase

    Stoke Adjustments
    Report: 
    Activity Log(Sir Recomended), Profit and Loss,Product sell Report,Stock Expire Report, Trending Products(Pie Chart), Stock Adjustments Report,Lowest Sell Product,








Products Table:
ProductID (Primary Key)
ProductName
CategoryID (Foreign Key)
Price
StockQuantity

Categories Table:
CategoryID (Primary Key)
CategoryName

Customers Table:
CustomerID (Primary Key)
FirstName
LastName
Email
Phone
Address

Sales Table:
SaleID (Primary Key)
CustomerID (Foreign Key)
SaleDate
TotalAmount
PaymentMethod

SaleItems Table:
SaleItemID (Primary Key)
SaleID (Foreign Key)
ProductID (Foreign Key)
Quantity
UnitPrice
TotalPrice

Employees Table (Optional):
EmployeeID (Primary Key)
FirstName
LastName
Username
Password
Role

Inventory Log Table (Optional, for tracking inventory changes):
LogID (Primary Key)
ProductID (Foreign Key)
LogDate
LogType (e.g., "Restock," "Sale," "Return")
QuantityChange
